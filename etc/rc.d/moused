#!/bin/sh
#
# $FreeBSD: head/etc/rc.d/moused 240336 2012-09-11 05:04:59Z obrien $
#

# PROVIDE: moused
# REQUIRE: DAEMON

. /etc/rc.subr

name=moused
rcvar=`set_rcvar`
command="/usr/sbin/${name}"
start_cmd="moused_start"
stop_cmd="moused_stop"
pidprefix="/var/run/moused"
load_rc_config $name

moused_start_dev()
{
	# Set the mouse device and get any related variables. If
	# a moused device has been specified on the commandline, then
	# rc.conf(5) variables defined for that device take precedence
	# over the generic moused_* variables. The only exception is
	# the moused_port variable, which if not defined sets it to the
	# passed in device name.
	#
	ms=$1
	eval myenable=\${moused_${ms}_enable-${moused_nondefault_enable}}
	eval myflags=\${moused_${ms}_flags-$moused_flags}
	eval myport=\${moused_${ms}_port-/dev/$ms}
	eval mytype=\${moused_${ms}_type-$moused_type}
	eval mypidfile="${pidprefix}.${ms}.pid"

	case ${myenable} in
	[Nn][Oo] | '')
		echo "${ms} not enabled"
		;;
	*)
		echo -n "Starting ${ms} moused: "
		/usr/sbin/moused ${myflags} -p ${myport} -t ${mytype} -I ${mypidfile}
		echo '.'
		;;
	esac
}

moused_stop_dev()
{
	ms=$1
	eval myenable=\${moused_${ms}_enable-${moused_nondefault_enable}}
	eval mypidfile="${pidprefix}.${ms}.pid"

	case ${myenable} in
	[Nn][Oo] | '')
		echo "${ms} not enabled"
		;;
	*)
		echo -n "Stopping ${ms} moused: "
		mypid=$(check_pidfile $mypidfile $command)
		if [ -z "$mypid" ]; then
			echo "moused for ${ms} not running? (check $mypidfile)." 
		else
			kill $sig_stop $mypid
			wait_for_pids $mypid
		fi
		echo '.'
		;;
	esac
}

moused_start()
{
	ms=$1
	if [ -n "$ms" ]; then
		moused_start_dev $ms
	else
		for ms in ${moused_interfaces}; do
			moused_start_dev $ms
		done
	fi

	mousechar_arg=
	case ${mousechar_start} in
	[Nn][Oo] | '')
		;;
	*)
		mousechar_arg="-M ${mousechar_start}"
		;;
	esac

	for ttyv in /dev/ttyv* ; do
		vidcontrol < ${ttyv} ${mousechar_arg} -m on
	done
}

moused_stop()
{
	ms=$1
	if [ -n "$ms" ]; then
		moused_stop_dev $ms
	else
		for ms in ${moused_interfaces}; do
			moused_stop_dev $ms
		done
	fi
}

run_rc_command $*
